- name: Criar diretório base de extensões
  file:
    path: "/home/{{ desktop_user }}/.local/share/gnome-shell/extensions"
    state: directory
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"
    mode: '0755'

- name: Criar diretório temporário
  file:
    path: "/tmp/gnome-extensions"
    state: directory
    mode: '0755'

- name: Baixar extensão {{ item.name }}
  get_url:
    url: "{{ item.url }}"
    dest: "/tmp/gnome-extensions/{{ item.name }}.zip"
  loop: "{{ gnome_extensions }}"
  loop_control:
    label: "{{ item.name }}"

- name: Criar diretório temporário para {{ item.name }}
  file:
    path: "/tmp/gnome-extensions/{{ item.name }}"
    state: directory
    mode: '0755'
  loop: "{{ gnome_extensions }}"
  loop_control:
    label: "{{ item.name }}"

- name: Extrair extensão {{ item.name }}
  unarchive:
    src: "/tmp/gnome-extensions/{{ item.name }}.zip"
    dest: "/tmp/gnome-extensions/{{ item.name }}"
    remote_src: true
  loop: "{{ gnome_extensions }}"
  loop_control:
    label: "{{ item.name }}"

- name: Ler metadata e atualizar UUID
  slurp:
    src: "/tmp/gnome-extensions/{{ item.name }}/metadata.json"
  register: extension_metadata
  loop: "{{ gnome_extensions }}"
  loop_control:
    index_var: loop_index
    label: "{{ item.name }}"

- name: Atualizar UUID no fato
  set_fact:
    gnome_extensions: >-
      {{
        gnome_extensions[:loop_index] +
        [ item | combine({'uuid': (extension_metadata.results[loop_index].content | b64decode | from_json).uuid }) ] +
        gnome_extensions[loop_index + 1:]
      }}
  loop: "{{ gnome_extensions }}"
  loop_control:
    index_var: loop_index
    label: "{{ item.name }}"

- name: Instalar extensão {{ item.name }}
  copy:
    src: "/tmp/gnome-extensions/{{ item.name }}/"
    dest: "/home/{{ desktop_user }}/.local/share/gnome-shell/extensions/{{ item.uuid }}"
    remote_src: true
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"
  loop: "{{ gnome_extensions }}"
  loop_control:
    label: "{{ item.name }}"

